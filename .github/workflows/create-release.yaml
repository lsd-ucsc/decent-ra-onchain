name: Create release

on:
  push:
    branches: [ main ]
    tags:
      - "v*.*.*"
  pull_request:
    branches: [ main ]

jobs:
  create_release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-22.04 ]

        solc-version: [ v0.8.20 ]

    env:
      SOLC_BIN: ${{ github.workspace }}/build/solc-static-linux
      SOLC_FLAGS: --optimize --optimize-runs 200
                  --revert-strings strip
                  --via-ir
                  --overwrite
                  --base-path ${{ github.workspace }}
                  --output-dir ${{ github.workspace }}/build/
      RELE_NOTE: ${{ github.workspace }}/build/release_note.md

    name: A job to create a release
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Installing Solc compiler
      run: |
        mkdir -p ${{ github.workspace }}/build/
        curl -fsSL -o ${SOLC_BIN} \
          https://github.com/ethereum/solidity/releases/download/${{ matrix.solc-version }}/solc-static-linux
        chmod +x ${SOLC_BIN}

    - name: Compiling contracts for contracts/IASRootCertMgr.sol
      run: |
        ${SOLC_BIN} ${SOLC_FLAGS} --bin ${{ github.workspace }}/contracts/IASRootCertMgr.sol
        ${SOLC_BIN} ${SOLC_FLAGS} --abi ${{ github.workspace }}/contracts/IASRootCertMgr.sol

    - name: Compiling contracts for contracts/IASReportCertMgr.sol
      run: |
        ${SOLC_BIN} ${SOLC_FLAGS} --bin ${{ github.workspace }}/contracts/IASReportCertMgr.sol
        ${SOLC_BIN} ${SOLC_FLAGS} --abi ${{ github.workspace }}/contracts/IASReportCertMgr.sol

    - name: Compiling contracts for contracts/DecentServerCertMgr.sol
      run: |
        ${SOLC_BIN} ${SOLC_FLAGS} --bin ${{ github.workspace }}/contracts/DecentServerCertMgr.sol
        ${SOLC_BIN} ${SOLC_FLAGS} --abi ${{ github.workspace }}/contracts/DecentServerCertMgr.sol

    - name: Compiling contracts for tests/HelloWorldApp.sol
      run: |
        ${SOLC_BIN} ${SOLC_FLAGS} --bin ${{ github.workspace }}/tests/HelloWorldApp.sol
        ${SOLC_BIN} ${SOLC_FLAGS} --abi ${{ github.workspace }}/tests/HelloWorldApp.sol

    - name: Calculating checksums of the binary
      run: |
        sha256sum ./build/IASRootCertMgr.bin  >> ./build/checksums.txt
        sha256sum ./build/IASRootCertMgr.abi  >> ./build/checksums.txt
        sha256sum ./build/IASReportCertMgr.bin  >> ./build/checksums.txt
        sha256sum ./build/IASReportCertMgr.abi  >> ./build/checksums.txt
        sha256sum ./build/DecentServerCertMgr.bin  >> ./build/checksums.txt
        sha256sum ./build/DecentServerCertMgr.abi  >> ./build/checksums.txt
        sha256sum ./build/HelloWorldApp.bin  >> ./build/checksums.txt
        sha256sum ./build/HelloWorldApp.abi  >> ./build/checksums.txt

    - name: Generate release note
      run: |
        echo "# Release note"                   >> ${RELE_NOTE}
        echo "" >> ${RELE_NOTE}
        echo "## Contracts"                         >> ${RELE_NOTE}
        echo "- contracts/IASRootCertMgr.sol"       >> ${RELE_NOTE}
        echo "- contracts/IASReportCertMgr.sol"     >> ${RELE_NOTE}
        echo "- contracts/DecentServerCertMgr.sol"  >> ${RELE_NOTE}
        echo "- tests/HelloWorldApp.sol"            >> ${RELE_NOTE}
        echo "" >> ${RELE_NOTE}
        echo "## Build configurations"                       >> ${RELE_NOTE}
        echo "- OS: \`${{ matrix.os }}\`"                    >> ${RELE_NOTE}
        echo "- Solc version: \`$(${SOLC_BIN} --version)\`"  >> ${RELE_NOTE}
        echo "- Compiler Flags: \`${SOLC_FLAGS}\`"           >> ${RELE_NOTE}
        echo "" >> ${RELE_NOTE}
        echo "## Checksums"       >> ${RELE_NOTE}
        echo "\`\`\`"             >> ${RELE_NOTE}
        cat ./build/checksums.txt >> ${RELE_NOTE}
        echo "\`\`\`"             >> ${RELE_NOTE}
        echo "" >> ${RELE_NOTE}
        echo "## Gas Cost Evaluations" >> ${RELE_NOTE}
        echo "\`\`\`json"         >> ${RELE_NOTE}
        cat ./build/checksums.txt >> ${RELE_NOTE}
        echo "\`\`\`"             >> ${RELE_NOTE}
        echo "" >> ${RELE_NOTE}

    - name: Echo release note
      run: |
        cat ${{ github.workspace }}/build/release_note.md

    - name: Release for non-tagged commit
      uses: actions/upload-artifact@v3
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      with:
        name: non_tagged_release
        path: |
          ${{ github.workspace }}/build/release_note.md
          ${{ github.workspace }}/build/IASRootCertMgr.bin
          ${{ github.workspace }}/build/IASRootCertMgr.abi
          ${{ github.workspace }}/build/IASReportCertMgr.bin
          ${{ github.workspace }}/build/IASReportCertMgr.abi
          ${{ github.workspace }}/build/DecentServerCertMgr.bin
          ${{ github.workspace }}/build/DecentServerCertMgr.abi
          ${{ github.workspace }}/build/HelloWorldApp.bin
          ${{ github.workspace }}/build/HelloWorldApp.abi

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        body_path: ${{ github.workspace }}/build/release_note.md
        files: |
          ${{ github.workspace }}/build/IASRootCertMgr.bin
          ${{ github.workspace }}/build/IASRootCertMgr.abi
          ${{ github.workspace }}/build/IASReportCertMgr.bin
          ${{ github.workspace }}/build/IASReportCertMgr.abi
          ${{ github.workspace }}/build/DecentServerCertMgr.bin
          ${{ github.workspace }}/build/DecentServerCertMgr.abi
          ${{ github.workspace }}/build/HelloWorldApp.bin
          ${{ github.workspace }}/build/HelloWorldApp.abi
